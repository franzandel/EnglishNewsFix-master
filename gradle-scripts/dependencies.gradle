ext {

    /**
     * Library Version
     * */

    supportLibVersion = '28.0.0'
    constraintLayoutVersion = '1.1.3'
    recyclerViewVersion = '1.0.0'
    retrofitVersion = '2.6.0'
    okhttpVersion = '4.0.0'
    rxJavaVersion = '2.1.13'
    rxAndroidVersion = '2.0.1'
    aviVersion = '2.1.3'
    circleImageViewVersion = '3.0.0'
    picassoVersion = '2.71828'
    daggerVersion = '2.23.2'
    groupieVersion = '2.1.0'

    /**
     * Testing Library Version
     * */

    jUnitVersion = '4.12'
    runnerVersion = '1.2.0'
    espressoVersion = '3.2.0'

    /**
     * Library Package
     * */

    supportPackage = 'com.android.support'
    constraintLayoutPackage = 'androidx.constraintlayout'
    recyclerViewPackage = 'androidx.recyclerview'
    retrofitPackage = 'com.squareup.retrofit2'
    okHttpPackage = 'com.squareup.okhttp3'
    rxJavaPackage = 'io.reactivex.rxjava2'
    aviPackage = 'com.wang.avi'
    circleImageViewPackage = 'de.hdodenhof'
    picasoPackage = 'com.squareup.picasso'
    daggerPackage = 'com.google.dagger'
    groupiePackage = 'com.xwray'

    /**
     * Testing Library Package
     * */

    jUnitPackage = 'junit'
    testPackage = 'androidx.test'
    espressoPackage = 'androidx.test.espresso'


    /**
     * List of Android Support Dependencies
     * */

    supportDependencies = [
            design          : buildDependency(supportPackage, 'design', supportLibVersion),
    ]

    constraintLayout = buildDependency(constraintLayoutPackage, 'constraintlayout', constraintLayoutVersion)
    recyclerView = buildDependency(recyclerViewPackage, 'recyclerview', recyclerViewVersion)

    /**
     * List of Retrofit 2 Dependencies
     * */

    retrofitDependencies = [
            retrofit     : buildDependency(retrofitPackage, 'retrofit', retrofitVersion),
            converterGson: buildDependency(retrofitPackage, 'converter-gson', retrofitVersion),
            rxAdapterJava: buildDependency(retrofitPackage, 'adapter-rxjava2', retrofitVersion)
    ]

    /**
     * List of okhttp 3 Dependencies
     * */

    okhttpDependencies = [
            okhttp            : buildDependency(okHttpPackage, 'okhttp', okhttpVersion),
            loggingInterceptor: buildDependency(okHttpPackage, 'logging-interceptor', okhttpVersion)
    ]

    /**
     * List of RxJava 2 Dependencies
     * */

    rxDependencies = [
            rxJava   : buildDependency(rxJavaPackage, 'rxjava', rxJavaVersion),
            rxAndroid: buildDependency(rxJavaPackage, 'rxandroid', rxAndroidVersion)
    ]

    /**
     * List of Dagger 2 Dependencies
     * */

    daggerDependencies = [
            dagger                : buildDependency(daggerPackage, 'dagger', daggerVersion),
            daggerCompiler        : buildDependency(daggerPackage, 'dagger-compiler', daggerVersion),
            daggerAndroidSupport  : buildDependency(daggerPackage, 'dagger-android-support', daggerVersion),
            daggerAndroidProcessor: buildDependency(daggerPackage, 'dagger-android-processor', daggerVersion)
    ]

    /**
     * List of Espresso Dependencies
     * */

    espressoDependencies = [
            espressoCore   : buildDependency(espressoPackage, 'espresso-core', espressoVersion),
    ]

    /**
     * Groupie Adapter Library
     * */

    groupie = buildDependency(groupiePackage, 'groupie', groupieVersion)

    /**
     * AVLoadingIndicatorView
     * */

    aviLoadingIndicator = buildDependency(aviPackage, 'library', aviVersion)

    /**
     * Picasso
     * */

    picasso = buildDependency(picasoPackage, 'picasso', picassoVersion)

    /**
     * CircleImageView
     * */

    circleImageView = buildDependency(circleImageViewPackage, 'circleimageview', circleImageViewVersion)

    /**
     * Android Test Library
     * */

    jUnit = buildDependency(jUnitPackage, 'junit', jUnitVersion)
    androidRunner = buildDependency(testPackage, 'runner', runnerVersion)
}

/**
 * Generate Build Dependency Package Name and Version
 * */

static String buildDependency(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}